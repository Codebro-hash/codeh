

# Function for Linear Search
def linear_search(arr, key):
    for i in range(len(arr)):
        if arr[i] == key:
            return i  # Return the index if found
    return -1  # Return -1 if not found


# Function for Sentinel Search
def sentinel_search(arr, key):
    
    n = len(arr)
    last = arr[n-1]
    arr[n-1] = key
    i = 0
    while arr[i] != key:
        i += 1
    arr[n-1] = last  # Restore the last element
    if i < n - 1 or arr[n-1] == key:
        return i  # Return the index if found
    return -1  # Return -1 if not found


# Function for Binary Search (requires sorted array)
def binary_search(arr, key):
    low = 0
    high = len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == key:
            return mid  # Return the index if found
        elif arr[mid] < key:
            low = mid + 1
        else:
            high = mid - 1
    return -1  # Return -1 if not found


# Main program
students = [101, 115, 109, 130, 129, 106, 117]
roll_no = int(input("Enter roll number to search: "))

# Linear Search
result = linear_search(students, roll_no)
print(f"Linear Search: {'found at index ' + str(result) if result != -1 else 'not found'}")

# Sentinel Search
result = sentinel_search(students, roll_no)
print(f"Sentinel Search: {'found at index ' + str(result) if result != -1 else 'not found'}")

# Binary Search (requires sorted array)
students.sort()  # Sort the array for Binary Search
result = binary_search(students, roll_no)
print(f"Binary Search: {'found at index ' + str(result) if result != -1 else 'not found'}")
